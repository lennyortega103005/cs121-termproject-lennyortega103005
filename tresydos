import random

def initialize_deck():
    ranks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A']
    suits = ['Hearts', 'Diamonds', 'Clubs', 'Spades']
    deck = [{'rank': rank, 'suit': suit} for rank in ranks for suit in suits]
    return deck

def shuffle_deck(deck):
    random.shuffle(deck)

def deal_cards(deck, num_players):
    hands = [[] for _ in range(num_players)]

    for _ in range(5):
        for i in range(num_players):
            card = deck.pop()
            hands[i].append(card)

    return hands

def display_hand(hand, player_num):
    print(f"\nPlayer {player_num}'s hand:")
    for i, card in enumerate(hand, start=1):
        print(f"{i}. {card['rank']} of {card['suit']}")

def is_tres_y_dos(hand):
    ranks_count = {}
    for card in hand:
        rank = card['rank']
        ranks_count[rank] = ranks_count.get(rank, 0) + 1

    return 3 in ranks_count.values() and 2 in ranks_count.values()

def evaluate_hand(hand):
    if is_tres_y_dos(hand):
        return "Tres y Dos"

    return "No combination"

def determine_winner(hands):
    for i, hand in enumerate(hands):
        if is_tres_y_dos(hand):
            return i + 1
    return None

def main():
    num_players = int(input("Enter the number of players: "))
    deck = initialize_deck()
    shuffle_deck(deck)
    hands = deal_cards(deck, num_players)
    discard_pile = []
    rounds = 0
    max_rounds = 21  

    while True:
        rounds += 1
        print(f"\nRound {rounds}:")

        for i, hand in enumerate(hands):
            display_hand(hand, i + 1)
            drawn_card = deck[-1]
            print(f"\nDrawn card: {drawn_card['rank']} of {drawn_card['suit']}")
            decision = input("Do you want to draw this card? (y/n): ").lower()

            if decision == 'n':
                discard_pile.append(deck.pop())
            else:
                display_hand(hand, i + 1)
                drop_index = int(input("Enter the index of the card you want to drop (1-5): "))
                if 1 <= drop_index <= 5:
                    dropped_card = hand.pop(drop_index - 1)
                    print(f"Dropped card: {dropped_card['rank']} of {dropped_card['suit']}")
                    discard_pile.append(drop_index)
                    hand.insert(drop_index - 1, drawn_card)
                else:
                    print("Invalid index. Card not dropped.")
                    discard_pile.append(deck.pop())

        winner = determine_winner(hands)
        if winner:
            print(f"\nPlayer {winner} wins with Tres y Dos!")
            break

        if rounds == max_rounds:
            print("\nMaximum rounds reached. No winner.")
            break

    print("\nDiscard Pile:")
    for card in discard_pile:
        if isinstance(card, dict):
            print(f"{card['rank']} of {card['suit']}")
        else:
            print(f"Index {card} (card not kept)")

if __name__ == "__main__":
    main()